{"version":3,"sources":["base.js","circles.js","index.js"],"names":["$svg","d3","select","padding","top","bottom","left","right","startDate","endDate","yearLine","domLine","intLine","domMult","intMult","setupBase","baseGroup","yearGroup","append","attr","i","text","resizeBase","el","height","width","circles","selectAll","radius","$hoverBox","$mainBoxes","clicked","setupCircles","nodes","forEach","data","dataset","id","createId","on","highlight","influence","hover","clearHighlight","clickHandler","resizeCircles","xMult","type","xPos","yPos","getYFrac","date","slice","replace","frac","comps","split","Number","inf","self","trim","transition","pos","node","getBoundingClientRect","classed","style","x","y","html","influences","main","createPath","offset","window","scrollY","offsetTop","dotPos","textPos","leftSide","console","log","init","resize","innerWidth","innerHeight","addEventListener"],"mappings":"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","file":"index.js","sourceRoot":"../src/js","sourcesContent":["import { width, height } from \"./index\";\n\nconst $svg = d3.select(\"#graphic-container\");\nconst padding = { top: 10, bottom: 10, left: 50, right: 10 },\n  startDate = 1980,\n  endDate = 2020;\nconst domMult = 0.15,\n  intMult = 0.85;\nlet yearLine, domLine, intLine;\n\nfunction setupBase() {\n  const baseGroup = $svg.select(\"#base-group\");\n  const yearGroup = baseGroup.append(\"g\").attr(\"id\", \"year-group\");\n  for (let i = startDate; i <= endDate; i++) {\n    if (i % 10 == 0) {\n      yearGroup\n        .append(\"text\")\n        .text(i)\n        .attr(\"id\", `year-marker-${i}`)\n        .attr(\"class\", \"year-marker-text\")\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"text-anchor\", \"middle\");\n    } else {\n      yearGroup\n        .append(\"line\")\n        .attr(\"id\", `year-marker-${i}`)\n        .attr(\"class\", \"year-marker-dash\");\n    }\n  }\n  domLine = baseGroup.append(\"line\").attr(\"id\", \"domLine\");\n  intLine = baseGroup.append(\"line\").attr(\"id\", \"intLine\");\n}\n\nfunction resizeBase() {\n  for (let i = startDate; i <= endDate; i++) {\n    const el = d3.select(`#year-marker-${i}`);\n    if (i % 10 == 0) {\n      el.attr(\"x\", padding.left).attr(\n        \"y\",\n        padding.top + (height * (i - startDate)) / (endDate - startDate)\n      );\n    } else {\n      el.attr(\"x1\", i % 5 == 0 ? padding.left - 10 : padding.left - 5)\n        .attr(\"x2\", i % 5 == 0 ? padding.left + 10 : padding.left + 5)\n        .attr(\n          \"y1\",\n          padding.top + (height * (i - startDate)) / (endDate - startDate)\n        )\n        .attr(\n          \"y2\",\n          padding.top + (height * (i - startDate)) / (endDate - startDate)\n        );\n    }\n  }\n  domLine\n    .attr(\"x1\", padding.left + domMult * width)\n    .attr(\"x2\", padding.left + domMult * width)\n    .attr(\"y1\", padding.top)\n    .attr(\"y2\", padding.top + height);\n\n  intLine\n    .attr(\"x1\", padding.left + intMult * width)\n    .attr(\"x2\", padding.left + intMult * width)\n    .attr(\"y1\", padding.top)\n    .attr(\"y2\", padding.top + height);\n}\n\nexport { setupBase, resizeBase, domMult, intMult, startDate, endDate, padding };\n","import { width, height } from \"./index\";\nimport { domMult, intMult, startDate, endDate, padding } from \"./base\";\n\nconst $svg = d3.select(\"#graphic-container\");\nconst circles = $svg.selectAll(\"circle\");\nconst radius = 10;\n\nconst $hoverBox = d3.select(\"#graphic-hover\");\nconst $mainBoxes = d3.selectAll(\".main-text\");\n\nlet clicked = [];\n\nfunction setupCircles() {\n  circles.nodes().forEach((el, i) => {\n    const data = el.dataset;\n    const id = createId(data);\n    d3.select(el)\n      .attr(\"id\", id)\n      .on(\"mouseenter\", () => highlight(data.influence, id, data.hover))\n      .on(\"mouseleave\", clearHighlight)\n      .on(\"click\", () => clickHandler(data.influence, id));\n  });\n}\n\nfunction resizeCircles() {\n  circles.nodes().forEach((el, i) => {\n    const data = el.dataset;\n    const xMult = data.type === \"international\" ? intMult : domMult;\n    const xPos = padding.left + width * xMult;\n    const yPos = padding.top + height * getYFrac(data.date);\n    d3.select(el).attr(\"r\", radius).attr(\"cx\", xPos).attr(\"cy\", yPos);\n  });\n}\n\nfunction createId(data) {\n  const date = data.date;\n  const type = data.type;\n  return type.slice(0, 1) + date.replace(/\\//gi, \"\");\n}\n\nfunction getYFrac(date) {\n  let frac = 0;\n  const comps = date.split(\"/\");\n  frac +=\n    (Number(comps[2]) +\n      Number(comps[1]) / 12 +\n      Number(comps[0]) / 365 -\n      startDate) /\n    (endDate - startDate);\n  return frac;\n}\n\nfunction highlight(inf, self, hover) {\n  if (inf.trim() != \"\") {\n    const influences = inf.split(\",\");\n    influences.forEach((id) =>\n      d3\n        .select(`#${id.trim()}`)\n        .transition()\n        .attr(\"r\", radius * 1.4)\n        .attr(\"fill\", \"orange\")\n    );\n  }\n\n  d3.select(`#${self}`)\n    .transition()\n    .attr(\"r\", radius * 1.4)\n    .attr(\"fill\", \"yellow\");\n\n  const pos = d3.select(`#${self}`).node().getBoundingClientRect();\n\n  if (hover) {\n    $hoverBox\n      .classed(\"visible\", true)\n      .classed(\"right\", self.slice(0, 1) === \"d\")\n      .style(\"left\", `${pos.x + pos.width / 2}px`)\n      .style(\"top\", `${pos.y + pos.height / 2}px`)\n      .html(hover);\n  }\n}\n\nfunction clearHighlight() {\n  circles.nodes().forEach((el, i) => {\n    d3.select(el).transition().attr(\"r\", radius).attr(\"fill\", \"black\");\n  });\n  if (clicked[0]) {\n    highlight(clicked[0], clicked[1]);\n  }\n\n  $hoverBox.classed(\"visible\", false);\n}\n\nfunction clickHandler(inf, self) {\n  $mainBoxes.classed(\"visible\", false).classed(\"right\", false);\n  d3.selectAll(\"path\").classed(\"visible\", false);\n  highlight(inf, self);\n  clicked = [inf, self];\n  const influences = inf.split(\",\");\n  [...influences, self].forEach((id, i) => {\n    if (id.trim() != \"\") {\n      const data = d3.select(`#${id.trim()}`).node().dataset;\n      d3.select(`#graphic-main-${i}`)\n        .classed(\"visible\", true)\n        .classed(\"right\", id.trim().slice(0, 1) === \"i\")\n        .classed(\"selection\", id === self)\n        .html(data.main);\n    }\n  });\n  [...influences, self].forEach((id, i) => {\n    if (id.trim() != \"\") {\n      createPath(id, i);\n    }\n  });\n}\n\nfunction createPath(id, i) {\n  const offset = window.scrollY - d3.select(\"#timeline\").node().offsetTop;\n  const dotPos = d3.select(`#${id.trim()}`).node().getBoundingClientRect();\n  const textPos = d3\n    .select(`#graphic-main-${i}`)\n    .node()\n    .getBoundingClientRect();\n  const leftSide = id.slice(0, 1) === \"d\";\n  console.log(dotPos);\n  console.log(textPos);\n  d3.select(`#line-${i}`)\n    .classed(\"visible\", true)\n    .attr(\n      \"d\",\n      `M ${dotPos.x + dotPos.width / 2} ${\n        offset + dotPos.y + dotPos.height / 2\n      } L ${dotPos.x + dotPos.width / 2 + 20 * (leftSide ? 1 : -1)} ${\n        offset + textPos.y + textPos.height\n      } H ${textPos.x + textPos.width / 2}`\n    );\n}\n\nexport { setupCircles, resizeCircles };\n","import { setupBase, resizeBase, padding } from \"./base\";\nimport { setupCircles, resizeCircles } from \"./circles\";\n\nconst $svg = d3.select(\"#graphic-container\");\nlet width, height;\n\nfunction init() {\n  setupBase();\n  setupCircles();\n}\n\nfunction resize() {\n  width = window.innerWidth - padding.left - padding.right;\n  height = window.innerHeight - padding.top - padding.bottom;\n  $svg.attr(\"viewBox\", `0 0 ${window.innerWidth} ${window.innerHeight}`);\n  resizeBase();\n  resizeCircles();\n}\n\ninit();\nresize();\n\nwindow.addEventListener(\"resize\", resize);\n\nexport { width, height };\n"]}